UE = CS.UnityEngine
-- local util = require 'xlua.util'

require('PipeController')


distancePipeUpAndDown = 7
distanceBetweenPipes = 5
pipeSpawnTime = distanceBetweenPipes / pipe_velocity
m_pipeSpawnTime = 0

local aspectRatio = UE.Camera.main.aspect
local halfScreenWidthInUnits = UE.Camera.main.orthographicSize * aspectRatio
local spawnDistanceFromCameraBoundary = 1
pipeStartPosX = UE.Camera.main.transform.position.x + halfScreenWidthInUnits + spawnDistanceFromCameraBoundary

cameraSize = UE.Camera.main.orthographicSize
pipePosMax = UE.Camera.main.orthographicSize
pipePosMin = 0.8

pipeGap = 3.5
halfPipeGap = pipeGap / 2

pipeSpawnPos = GetVector3D(pipeStartPosX, cameraSize/2, 0)

birdStartPos = -4

bird = nil
bird_rb = nil

isPlayerLose = false


function LuaAwake()
    birdPos = GetVector3D(birdStartPos, 0, 0)
    bird = Spawn("Bird", birdPos)

    SpawnPipes()
end

function LuaStart()
    --birdPos = GetVector3D(birdStartPos, 0, 0)
    --bird = Spawn("Bird", birdPos)

    --SpawnPipes()
end

function LuaUpdate()
    m_pipeSpawnTime = m_pipeSpawnTime + UE.Time.deltaTime

    if (m_pipeSpawnTime >= pipeSpawnTime) then      
        --UE.Debug.Log("Đã tới lúc spawn pipe")
        SpawnPipes()
        m_pipeSpawnTime = 0
    end
end


function LuaShowGameOverPanel()
    if (isPlayerLose == true) then
        return
    end

    --print("Show GameOverPanel, gọi từ Lua")
    isPlayerLose = true

    gameOverPanel:SetActive(true)

    -- Stop the game
    UE.Time.timeScale = 0
end

function LuaRestartGame()
    --print("Restart Game, gọi từ Lua")

    -- Continue the game
    UE.Time.timeScale = 1
    UE.SceneManagement.SceneManager.LoadScene(UE.SceneManagement.SceneManager.GetActiveScene().name)
end

function LuaQuitGame()
    UE.Application.Quit()
end




function SpawnPipes()
    -- Vị trí cho 2 pipe và score line
    local pipeUpPos = pipeSpawnPos
    local pipeDownPos = pipeUpPos - GetVector3D(0, distancePipeUpAndDown, 0)
    -- Cộng thêm 1 ở x là để cho cái scoreLine nằm bên phải mấy cái pipe, nghĩa là phải nhảy qua khỏi pipe thì mới được cộng điểm
    local scoreLinePos = pipeUpPos - GetVector3D(-1, distancePipeUpAndDown/2, 0)

    -- Vị trí spawn mới cho 2 pipe tiếp theo
    local nextSpawnPos = pipeSpawnPos.y + UE.Random.Range(-halfPipeGap, halfPipeGap)
    adjustNextSpawnPos = UE.Mathf.Clamp(nextSpawnPos, -cameraSize + distancePipeUpAndDown, cameraSize)
    pipeSpawnPos = GetVector3D(pipeStartPosX, adjustNextSpawnPos, 0)

    -- Tạo 2 pipes và score line
    Spawn("Pipe", pipeUpPos)
    Spawn("Pipe", pipeDownPos)
    Spawn("ScoreLine", scoreLinePos)
end

function Spawn(path, pos)
    go = CS.Extensions.LoadPrefab(path)
    local x = UE.Object.Instantiate(go, pos, UE.Quaternion.identity)
    return x
end


function GetVector3D(x, y, z)
    return UE.Vector3(x, y, z)
end

function GetVector2D(x, y)
    return UE.Vector2(x, y)
end



